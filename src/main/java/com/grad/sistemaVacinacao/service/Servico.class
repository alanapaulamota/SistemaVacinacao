package br.unb.cic.core.service;

import java.io.Serializable;
import java.util.Optional;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import br.unb.cic.core.domain.Entidade;
import br.unb.cic.core.service.dto.DataTransferObject;

/**
 * Interface que representa um serviço associado a uma entidade.
 *
 * @param <E>   Entidade que será tratada pelo serviço
 * @param <DTO> Data Transfer Object com os dados da entidade E que serão
 *              transferidos.
 * @param <ID>  Classe serializável que representa o ID da entidade E.
 *
 * @see Entidade
 * @see DataTransferObject
 */
public interface Servico<E extends Entidade<ID>, DTO extends DataTransferObject<ID>, ID extends Serializable> {

    /**
     * Salva (cria) a entidade.
     *
     * @param dto a entidade a ser criada.
     * @return a entidade persistida.
     */
    DTO save(@NotNull @Valid DTO dto);

    /**
     * Salva (atualiza) a entidade.
     *
     * @param dto a entidade a ser atualizada.
     * @return a entidade persistida.
     */
    DTO update(@NotNull @Valid DTO dto);

    /**
     * Retorna todas as entidades de acordo com as informações de paginação.
     *
     * @param pageable informações de paginação.
     * @return a lista de entidades.
     */
    Page<DTO> findAll(@NotNull Pageable pageable);

    /**
     * Encontra uma entidade pelo seu identificador.
     *
     * @param id o identificador da entidade.
     * @return a entidade.
     */
    Optional<DTO> findById(@NotNull ID id);

    /**
     * Exclui uma entidade pelo seu identificador.
     *
     * @param id o identificador da entidade.
     */
    void delete(@NotNull ID id);

}
